{
  "name": "viewability",
  "version": "1.0.1",
  "description": "Returns how viewable an element is",
  "main": "index.js",
  "scripts": {
    "test": "karma start"
  },
  "keywords": [
    "viewable",
    "viewability",
    "advertising"
  ],
  "author": {
    "name": "KahWee Teng",
    "email": "t@kw.sg",
    "url": "http://kw.sg/"
  },
  "license": "ISC",
  "devDependencies": {
    "jquery": "^2.1.4",
    "karma": "^0.12.35",
    "karma-browserify": "^4.2.1",
    "karma-chrome-launcher": "^0.1.12",
    "karma-coverage": "^0.3.1",
    "karma-mocha": "^0.1.10",
    "karma-sinon-chai": "^0.3.0"
  },
  "readme": "# viewability\n\nbrowser package to check if the element is on screen.\n\n```js\nvar vertical = require('viewability/vertical');\nvertical(document.getElementById('blue-box'));\n// return {value: 1, state: \"EL_IS_WITHIN_VERTICAL_VIEW\"}\n```\n\nUse `'viewability/horizontal'` for corresponding view.\n\n# Installation\n\nFrom `npm`:\n\n```sh\nnpm install --save viewability\n```\n\nFrom `bower`:\n\n```sh\nbower install --save viewability\n```\n\n# I want to find out if element is 100% on screen\n\n```js\nvar v = require('viewability');\nvar el = document.getElementById('blue-box');\nif (v.horizontal(el).value === 0 && v.vertical(el).value === 0) {\n  console.log('100% on screen.')\n} else if (v.horizontal(el).value > 0 || v.value(el).value > 0) {\n  console.log('Part of element in on screen.')\n}\n```\n\n# Running tests\n\n```sh\nnpm test\n```\n\n# License\n\nISC\n",
  "readmeFilename": "README.md",
  "gitHead": "9db912b223e1b81b67b9a2e8d8fcb0d4c21a984a",
  "_id": "viewability@1.0.1",
  "_shasum": "e38ab95a42910f9f7593ad2e370bfb7e4cd78908",
  "_from": "viewability@*"
}
